{"ast":null,"code":"import { Breakpoints } from '@angular/cdk/layout';\nimport { map, shareReplay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/cdk/layout\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/material/list\";\nimport * as i5 from \"@angular/material/sidenav\";\nimport * as i6 from \"@angular/material/toolbar\";\nimport * as i7 from \"@angular/material/icon\";\n\nfunction NavbarComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function NavbarComponent_button_14_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      i0.ɵɵnextContext();\n\n      const _r0 = i0.ɵɵreference(2);\n\n      return i0.ɵɵresetView(_r0.toggle());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\", 7);\n    i0.ɵɵtext(2, \"menu\");\n    i0.ɵɵelementEnd()();\n  }\n}\n\nexport class NavbarComponent {\n  constructor(breakpointObserver) {\n    this.breakpointObserver = breakpointObserver;\n    this.isHandset$ = this.breakpointObserver.observe(Breakpoints.Handset).pipe(map(result => result.matches), shareReplay());\n  }\n\n}\n\nNavbarComponent.ɵfac = function NavbarComponent_Factory(t) {\n  return new (t || NavbarComponent)(i0.ɵɵdirectiveInject(i1.BreakpointObserver));\n};\n\nNavbarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NavbarComponent,\n  selectors: [[\"app-navbar\"]],\n  decls: 19,\n  vars: 6,\n  consts: [[1, \"sidenav-container\"], [\"fixedInViewport\", \"\", 1, \"sidenav\", 3, \"mode\", \"opened\"], [\"drawer\", \"\"], [\"mat-list-item\", \"\", \"href\", \"#\"], [\"color\", \"primary\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"aria-label\", \"Toggle sidenav\", \"mat-icon-button\", \"\", 3, \"click\"], [\"aria-label\", \"Side nav toggle icon\"]],\n  template: function NavbarComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"mat-sidenav-container\", 0)(1, \"mat-sidenav\", 1, 2)(3, \"mat-toolbar\");\n      i0.ɵɵtext(4, \"Menu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"mat-nav-list\")(6, \"a\", 3);\n      i0.ɵɵtext(7, \"Link 1\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"a\", 3);\n      i0.ɵɵtext(9, \"Link 2\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"a\", 3);\n      i0.ɵɵtext(11, \"Link 3\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"mat-sidenav-content\")(13, \"mat-toolbar\", 4);\n      i0.ɵɵtemplate(14, NavbarComponent_button_14_Template, 3, 0, \"button\", 5);\n      i0.ɵɵpipe(15, \"async\");\n      i0.ɵɵelementStart(16, \"span\");\n      i0.ɵɵtext(17, \"Bezahlwebsite\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(18, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"mode\", \"side\")(\"opened\", false);\n      i0.ɵɵattribute(\"role\", \"navigation\");\n      i0.ɵɵadvance(13);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(15, 4, ctx.isHandset$));\n    }\n  },\n  dependencies: [i2.NgIf, i3.RouterOutlet, i4.MatNavList, i4.MatListItem, i5.MatSidenav, i5.MatSidenavContainer, i5.MatSidenavContent, i6.MatToolbar, i7.MatIcon, i2.AsyncPipe],\n  styles: [\".sidenav-container[_ngcontent-%COMP%] {\\n  height: 100%;\\n}\\n\\n.sidenav[_ngcontent-%COMP%] {\\n  width: 200px;\\n}\\n\\n.sidenav[_ngcontent-%COMP%]   .mat-toolbar[_ngcontent-%COMP%] {\\n  background: inherit;\\n}\\n\\n.mat-toolbar.mat-primary[_ngcontent-%COMP%] {\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLE1BQU07RUFDTixVQUFVO0FBQ1oiLCJmaWxlIjoibmF2YmFyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xuICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5zaWRlbmF2IHtcbiAgd2lkdGg6IDIwMHB4O1xufVxuXG4uc2lkZW5hdiAubWF0LXRvb2xiYXIge1xuICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xufVxuXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xuICBwb3NpdGlvbjogc3RpY2t5O1xuICB0b3A6IDA7XG4gIHotaW5kZXg6IDE7XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAA6BA,WAA7B,QAAgD,qBAAhD;AAEA,SAASC,GAAT,EAAcC,WAAd,QAAiC,gBAAjC;;;;;;;;;;;;;;ICWMC;IAIEA;MAAAA;MAAAA;;MAAA;;MAAA,OAASA,4BAAT;IAAwB,CAAxB;IAEAA;IAA4CA;IAAIA;;;;ADTxD,OAAM,MAAOC,eAAP,CAAsB;EAQ1BC,YAAoBC,kBAApB,EAA0D;IAAtC;IANpB,kBAAkC,KAAKA,kBAAL,CAAwBC,OAAxB,CAAgCP,WAAW,CAACQ,OAA5C,EAC/BC,IAD+B,CAE9BR,GAAG,CAACS,MAAM,IAAIA,MAAM,CAACC,OAAlB,CAF2B,EAG9BT,WAAW,EAHmB,CAAlC;EAM8D;;AARpC;;;mBAAfE,iBAAeD;AAAA;;;QAAfC;EAAeQ;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5Bb,iDAAiD,CAAjD,EAAiD,aAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,CAAjD,EAAiD,aAAjD;MAKiBA;MAAIA;MACjBA,qCAAc,CAAd,EAAc,GAAd,EAAc,CAAd;MAC4BA;MAAMA;MAChCA;MAA0BA;MAAMA;MAChCA;MAA0BA;MAAMA;MAGpCA,6CAAqB,EAArB,EAAqB,aAArB,EAAqB,CAArB;MAEIA;;MAQAA;MAAMA;MAAaA;MAErBA;MACFA;;;;MAtBIA;MAAAA,8BAAe,QAAf,EAAe,KAAf;MADAA;MAiBGA;MAAAA","names":["Breakpoints","map","shareReplay","i0","NavbarComponent","constructor","breakpointObserver","observe","Handset","pipe","result","matches","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Haunschmied.Bastian\\Documents\\GitHub\\Feuerwehr-Bezahlsystem\\TestWebApp\\Bezahlwebsite\\ClientApp\\src\\app\\navbar\\navbar.component.ts","C:\\Users\\Haunschmied.Bastian\\Documents\\GitHub\\Feuerwehr-Bezahlsystem\\TestWebApp\\Bezahlwebsite\\ClientApp\\src\\app\\navbar\\navbar.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { MatSidenavModule } from '@angular/material/sidenav';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"'navigation'\"\n      [mode]=\"'side'\"\n      [opened]=\"false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"#\">Link 1</a>\n      <a mat-list-item href=\"#\">Link 2</a>\n      <a mat-list-item href=\"#\">Link 3</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>Bezahlwebsite</span>\n    </mat-toolbar>\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n"]},"metadata":{},"sourceType":"module"}