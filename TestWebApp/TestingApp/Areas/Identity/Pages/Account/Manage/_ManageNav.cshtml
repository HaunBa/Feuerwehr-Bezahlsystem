@inject SignInManager<ApplicationUser> SignInManager
@inject IViewLocalizer _loc
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}
<ul class="nav nav-pills flex-column">
    <li class="nav-item"><a class="nav-link @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">@_loc["Profil"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PurchaseNavClass(ViewContext)" id="purchases" asp-page="./Purchases">@_loc["Käufe"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.StatsNavClass(ViewContext)" id="statistics" asp-page="./Statistics">@_loc["Statistiken"]</a></li>

@*    <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
*@    <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">@_loc["Passwort"]</a></li>
    @if (hasExternalLogins)
    {
        <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">@_loc["Externe Logins"]</a></li>
    }
    <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">@_loc["Zwei-Faktor Authentifizierung"]</a></li>
    <li class="nav-item"><a class="nav-link @ManageNavPages.PersonalDataNavClass(ViewContext)" id="personal-data" asp-page="./PersonalData">@_loc["Persönliche Daten"]</a></li>
</ul>
